version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ecommerce-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ecommerce_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - ecommerce-dev-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # E-commerce API (Development)
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ecommerce-api-dev
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ecommerce_dev?schema=public
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ecommerce-dev-network
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads

volumes:
  postgres_dev_data:

networks:
  ecommerce-dev-network:
    driver: bridge
